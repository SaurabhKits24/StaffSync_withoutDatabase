/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.awt.Desktop;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.swing.ImageIcon;


/**
 *
 * @author Dell
 */

public class NewJFrame extends javax.swing.JFrame {
private static Object con;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
   
        initComponents();
        setIconImage();
         cleanholidaylist();
        holidayCatogoryList();
       
        decideHoliday();
        removeconsiderationlist();
        considerationlist();
        startjcomboxall();
        showpaticulare();
  /*  try {
            connection();
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel20 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jPanel39 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jButton55 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jComboBox7 = new javax.swing.JComboBox<>();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        jComboBox21 = new javax.swing.JComboBox<>();
        jComboBox22 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel41 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jButton45 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel40 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox15 = new javax.swing.JComboBox<>();
        jComboBox16 = new javax.swing.JComboBox<>();
        jComboBox18 = new javax.swing.JComboBox<>();
        jComboBox20 = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jComboBox12 = new javax.swing.JComboBox<>();
        jComboBox13 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel44 = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton22 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jButton43 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 114, 234));

        jPanel17.setBackground(new java.awt.Color(255, 102, 153));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_2.png"))); // NOI18N
        jLabel5.setText("  ");

        jButton23.setText("Home");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("Import Data");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Holidays");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("Leaves");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton10.setText("Data Summarization");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton16.setText("Data Details");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton49.setText("Exit");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });

        jButton7.setText("Consideration");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton5.setText("Schedule");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton49, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(17, 17, 17))
        );

        jPanel20.setBackground(new java.awt.Color(153, 153, 153));

        jLabel13.setBackground(new java.awt.Color(196, 15, 51));
        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 90)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 51));
        jLabel13.setText("Staff Sync");

        jButton26.setText("Next");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap(889, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addGap(119, 119, 119))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Home", jPanel20);

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jButton2.setText("Choose Biometric Data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Choose Employee Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton56.setText("Show");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });

        jButton57.setText("Show");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jButton56, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 422, Short.MAX_VALUE)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                        .addComponent(jButton57)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton56, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel39.setBackground(new java.awt.Color(255, 204, 204));

        jButton21.setText("Save");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jLabel48.setText("Start Date");

        jLabel49.setText("End Date");

        jButton55.setText("Show");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addGap(33, 33, 33)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134)
                .addComponent(jLabel49)
                .addGap(36, 36, 36)
                .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jButton55, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel48)
                        .addComponent(jLabel49))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton55, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Import Data");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(408, 408, 408))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel38.setBackground(new java.awt.Color(204, 204, 255));

        jButton28.setText("Home");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton27.setText("Previous");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton29.setText("Next");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jButton27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton28)
                .addGap(296, 296, 296)
                .addComponent(jButton29)
                .addGap(112, 112, 112))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton28)
                    .addComponent(jButton29)
                    .addComponent(jButton27))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel38, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Import Data", jPanel21);

        jPanel11.setBackground(new java.awt.Color(226, 227, 252));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                /*  {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}*/
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jPanel4.setBackground(new java.awt.Color(51, 102, 255));

        jPanel37.setBackground(new java.awt.Color(204, 255, 255));

        jButton35.setText("Previous");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("Home");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setText("Next");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton36)
                .addGap(107, 107, 107)
                .addComponent(jButton37)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton35)
                    .addComponent(jButton36)
                    .addComponent(jButton37))
                .addGap(17, 17, 17))
        );

        jButton19.setText("Show Categories");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton50.setText("Show Holidays");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        jButton6.setText("Execute Holdiays");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton19)
                .addGap(51, 51, 51)
                .addComponent(jButton50)
                .addGap(46, 46, 46)
                .addComponent(jButton6)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton19)
                    .addComponent(jButton50)
                    .addComponent(jButton6))
                .addGap(83, 83, 83))
        );

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox3FocusGained(evt);
            }
        });
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton11.setText("ADD");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton12.setText("DELETE");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Category Modification");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jComboBox3))
                .addGap(95, 95, 95))
        );

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Holiday Modification");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        jComboBox7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox7FocusGained(evt);
            }
        });
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jButton33.setText("ADD");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("DELETE");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Date");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("Category");

        jButton18.setText("DELETE All");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(121, 121, 121))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jButton33)
                .addGap(66, 66, 66)
                .addComponent(jButton34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton18)
                .addGap(38, 38, 38))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton33)
                    .addComponent(jButton34)
                    .addComponent(jButton18))
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Holidays", jPanel11);

        jPanel12.setBackground(new java.awt.Color(248, 248, 255));

        jLabel22.setBackground(new java.awt.Color(0, 0, 153));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 204));
        jLabel22.setText("Consideration");

        jPanel14.setBackground(new java.awt.Color(204, 204, 255));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        jComboBox5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox5FocusLost(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel23.setText("Select Employee Id or  Name:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel24.setText("Reason:");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel25.setText("Date:");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel26.setText("Time in:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH"}));
        jComboBox4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox4FocusGained(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM"}));
        jComboBox6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox6FocusGained(evt);
            }
        });
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel47.setText("Time out:");

        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH" }));
        jComboBox21.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox21FocusGained(evt);
            }
        });
        jComboBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox21ActionPerformed(evt);
            }
        });

        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"MM" }));
        jComboBox22.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox22FocusGained(evt);
            }
        });
        jComboBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox22ActionPerformed(evt);
            }
        });

        jLabel16.setText("HH");

        jLabel28.setText("MM");

        jLabel33.setText("HH");

        jLabel36.setText("MM");

        jCheckBox1.setText("Late");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Early Out");

        jLabel41.setText("Ignore It");

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel42Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)))
                    .addGroup(jPanel42Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel41)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addGap(18, 18, 18))
        );

        jButton13.setText(" Save");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton58.setText("Delete");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });

        jButton59.setText("Reset");
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton58, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton59)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton58, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton59, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox21, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jComboBox22, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addGap(85, 85, 85)
                                .addComponent(jLabel28)
                                .addGap(196, 196, 196)
                                .addComponent(jLabel33)
                                .addGap(81, 81, 81)
                                .addComponent(jLabel36)
                                .addGap(86, 86, 86)))
                        .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel26)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addGap(51, 51, 51))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(32, Short.MAX_VALUE))))
        );

        jButton45.setText("Next");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton44.setText("Home");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        jButton14.setText("Previous");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 351, Short.MAX_VALUE)
                .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278)
                .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jPanel34.setBackground(new java.awt.Color(204, 204, 255));

        jButton53.setText("Show");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        jButton54.setText("Execute");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton54)
                    .addComponent(jButton53))
                .addGap(55, 55, 55))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton53)
                .addGap(30, 30, 30)
                .addComponent(jButton54)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(387, 387, 387))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consideration", jPanel12);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLayeredPane1.setBackground(new java.awt.Color(255, 102, 102));

        jPanel9.setBackground(new java.awt.Color(153, 0, 255));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Half Day Time");

        jPanel10.setBackground(new java.awt.Color(204, 204, 255));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("First Shift");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Second Shift");

        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH" }));
        jComboBox15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox15FocusGained(evt);
            }
        });

        jComboBox16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"MM"}));
        jComboBox16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox16FocusGained(evt);
            }
        });

        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH"  }));
        jComboBox18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox18FocusGained(evt);
            }
        });
        jComboBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox18ActionPerformed(evt);
            }
        });

        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"MM"}));
        jComboBox20.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox20FocusGained(evt);
            }
        });
        jComboBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox20ActionPerformed(evt);
            }
        });

        jLabel31.setText("HH");

        jLabel32.setText("MM");

        jLabel34.setText("HH");

        jLabel35.setText("MM");

        jLabel37.setText("Start Time");

        jLabel38.setText("End Time");

        jLabel39.setText("HH");

        jLabel40.setText("MM");

        jLabel42.setText("Start Time");

        jLabel43.setText("End Time");

        jLabel44.setText("HH");

        jLabel45.setText("MM");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jComboBox16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel40))
                                .addGap(109, 109, 109))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(68, 68, 68)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35)
                        .addGap(110, 110, 110))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jComboBox18, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel31)
                                .addGroup(jPanel10Layout.createSequentialGroup()
                                    .addComponent(jLabel37)
                                    .addGap(73, 73, 73)
                                    .addComponent(jLabel39))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addComponent(jComboBox20, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel43)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel45)
                        .addGap(101, 101, 101))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel38)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jComboBox16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel12)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel43))
                                .addGap(29, 29, 29))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jButton9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton9.setText("Save");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9))
                        .addGap(19, 19, 19))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 0, 255));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Full Day Time");

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Start Time");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("End Time");

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH"}));
        jComboBox9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox9FocusGained(evt);
            }
        });
        jComboBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox9ActionPerformed(evt);
            }
        });

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"MM"}));
        jComboBox10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox10FocusGained(evt);
            }
        });
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"HH"}));
        jComboBox12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox12FocusGained(evt);
            }
        });
        jComboBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox12ActionPerformed(evt);
            }
        });

        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"MM" }));
        jComboBox13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox13FocusGained(evt);
            }
        });
        jComboBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox13ActionPerformed(evt);
            }
        });

        jLabel14.setText("HH");

        jLabel15.setText("MM");

        jLabel20.setText("HH");

        jLabel21.setText("MM");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel14))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel20)))
                .addGap(39, 39, 39)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(96, 96, 96))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton8.setText("Save");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(35, 35, 35))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addGap(38, 38, 38)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setText("Schedule Time");

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(387, 387, 387)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLayeredPane1.setLayer(jPanel40, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jButton32.setText("Next");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton31.setText("Home");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton30.setText("Previous");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jButton30)
                .addGap(256, 256, 256)
                .addComponent(jButton31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jButton32)
                .addGap(79, 79, 79))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton30)
                    .addComponent(jButton31)
                    .addComponent(jButton32))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Schedule", jPanel6);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jPanel16.setBackground(new java.awt.Color(233, 233, 234));

        jButton17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton17.setText("Save");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Select leave" }));
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Enter number of leaves:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel27.setText("Leave");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(469, 469, 469)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton17)
                    .addComponent(jLabel27))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(0, 211, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(352, 352, 352))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel27)
                .addGap(96, 96, 96)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addGap(33, 33, 33))
        );

        jButton46.setText("Previous");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setText("Home");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jButton48.setText("Next");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(319, 319, 319)
                .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("Leaves", jPanel15);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                /*  {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}*/
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton15.setText("Show PDF");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Data Summarization");

        jButton51.setText("Time Summarization");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        jButton52.setText("Attendence Summarization");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 972, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addComponent(jButton51)
                                .addGap(276, 276, 276)
                                .addComponent(jButton52)
                                .addGap(227, 227, 227)
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addComponent(jLabel1)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton51)
                    .addComponent(jButton52, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jButton40.setText("Previous");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.setText("Home");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jButton42.setText("Next");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)
                .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220)
                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data Summarization", jPanel5);

        jPanel19.setBackground(new java.awt.Color(0, 51, 153));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setText("Select Employee:");

        jButton25.setText("All Data");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton20.setText("Search");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"** Select Employee **"}));
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(0, 0, 0));
        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel29.setText("Data Details");

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                /* {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}*/
            },
            new String [] {
                "EmpId", "Emp Name", "Emp Date", "Time in",
                "Time out", "Total Time", "Remark in", "Remark out",
                "Holiday","Half Day" }
        ));
        jScrollPane3.setViewportView(jTable2);

        jButton22.setText("Show PDF");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel30)
                .addGap(31, 31, 31)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addComponent(jButton25)
                        .addGap(472, 472, 472))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(420, 420, 420))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel29)
                .addGap(22, 22, 22)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton20))
                .addGap(12, 12, 12)
                .addComponent(jButton25)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        jButton43.setText("Exit");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton39.setText("Home");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton38.setText("Previous");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(340, 340, 340)
                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, Short.MAX_VALUE)
                .addComponent(jButton43)
                .addGap(43, 43, 43))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton43, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jButton39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton38, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data Details", jPanel19);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//public static Object con;
    public void connection() throws SQLException, IOException{
         
         String url = "jdbc:mysql://localhost:3306/biometric";
     String uname ="root";
     String password="123456789";
     try{
         Class.forName("com.mysql.cj.jdbc.Driver");
          Connection con ;
         con =DriverManager.getConnection(url,uname,password);
         System.out.println("DataBase Connected");
         System.out.println(con);
                 
     } catch (ClassNotFoundException e){
         e.printStackTrace();
     }
    
}
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
      String startTimehh;
    startTimehh = jComboBox4.getSelectedItem().toString();
     String startTimemm;
    startTimemm = jComboBox6.getSelectedItem().toString();
    String startTimess="00";
     String timein;
     
     String endTimehh;
    endTimehh = jComboBox21.getSelectedItem().toString();
     String endTimemm;
    endTimemm = jComboBox22.getSelectedItem().toString();
    String endTimess="00";
    String timeout;
    int searcid;
    String searchname;
    
    if(startTimehh.equals("HH")&& startTimemm.equals("MM")){
        timein=null;
    }
    else {
        timein=String.format("%s:%s:%s",startTimehh,startTimemm,startTimess);
    }
    
    if (endTimehh.equals("HH") && endTimemm.equals("MM")) {
        timeout=null;
    }
    else{
         timeout = String.format("%s:%s:%s", endTimehh, endTimemm, endTimess);
    }
    
       SimpleDateFormat dataformat = new SimpleDateFormat("yyyy-MM-dd");
       
       String TheDate=dataformat.format(jDateChooser1.getDate());
           
    String selectedValuess;
    selectedValuess = jComboBox5.getSelectedItem().toString();
        String userInput = jTextArea1.getText(); // Get user input
        
        
        // Ignore query
         String ignoreit="";
    
        
     
        if (jCheckBox1.isSelected() && jCheckBox2.isSelected())
        {
           
            ignoreit="Late, Early";
        }
        else if(jCheckBox1.isSelected())
        {
            ignoreit="Late";
        }
        else if(jCheckBox2.isSelected())
        {
           ignoreit="Early";
        }
        else{
            ignoreit=null;
        }
    
  if(selectedValuess.equals("Consider all Employee")){
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
          System.out.println("data selected");
           //  Statement statementdisplay = con.createStatement();

            // Execute query
            String considerall="SELECT distinct(Emp_id),Emp_Name FROM biometric.all;";
             java.sql.Statement statement = con.createStatement();
                 ResultSet resultSet = statement.executeQuery(considerall);
            // Iterate through the result set
            while (resultSet.next()) {
                int id = resultSet.getInt("Emp_id");
               String name = resultSet.getString("Emp_Name");
               // double salary = resultSet.getDouble("salary");

                // Display each row
                System.out.println("Employee ID: " + id);
                System.out.println("Name: " + name);
               // System.out.println("Salary: " + salary);
                System.out.println();
                searcid=id;
                searchname=name;
                // Delay for 2 seconds (2000 milliseconds) before displaying the next row
              //  Thread.sleep(2000); // Note: Handle InterruptedException appropriately
                  String checkQuery = "SELECT 1 FROM biometric.consideration WHERE Emp_id = ? AND Date = ?";
            PreparedStatement checkStatement = con.prepareStatement(checkQuery);
            checkStatement.setInt(1, searcid);
            checkStatement.setString(2, TheDate);
            ResultSet resultSetupdate = checkStatement.executeQuery();
            if (resultSetupdate.next()) {
                // Record exists, update it
                String updateQuery = "UPDATE biometric.consideration SET Reasone = ?,Time_in=?,Time_out=?,ignoreing=? WHERE Emp_id = ? AND Date = ?";
                PreparedStatement updateStatement = con.prepareStatement(updateQuery);
                updateStatement.setString(1, userInput);
                 if (timein == null)
                {
                     updateStatement.setNull(2, java.sql.Types.VARCHAR);
                }
                else{
                    updateStatement.setString(2, timein); 
                }
                if (timeout== null)
                {
                     updateStatement.setNull(3, java.sql.Types.VARCHAR);
                }
                else{
                    updateStatement.setString(3, timeout);
                }
                
               if (ignoreit == null) {
                    updateStatement.setNull(4, java.sql.Types.VARCHAR); // Store as null
               } 
               else {
                   updateStatement.setString(4, ignoreit); // Store as string
               }
                updateStatement.setInt(5, searcid);
                updateStatement.setString(6, TheDate);
                updateStatement.executeUpdate();
                System.out.println("Record updated successfully.");
            } else {
                // Record doesn't exist, insert a new one
                String insertQuery = "INSERT INTO biometric.consideration (Emp_id,Emp_Name,Date,Time_in,Time_out,ignoreing,Reasone) VALUES (?,?,?,?,?,?,?)";
                PreparedStatement insertStatement = con.prepareStatement(insertQuery);
                insertStatement.setInt(1, searcid);
                 insertStatement.setString(2, searchname);
                insertStatement.setString(3, TheDate);
                if (timein == null)
                {
                     insertStatement.setNull(4, java.sql.Types.VARCHAR);
                }
                else{
                    insertStatement.setString(4, timein); 
                }
                if (timeout== null)
                {
                     insertStatement.setNull(5, java.sql.Types.VARCHAR);
                }
                else{
                    insertStatement.setString(5, timeout);
                }
                
                
               if (ignoreit == null) {
                    insertStatement.setNull(6, java.sql.Types.VARCHAR); // Store as null
               } 
               else {
                   insertStatement.setString(6, ignoreit); // Store as string
               }
                insertStatement.setString(7, userInput);
                insertStatement.executeUpdate();
                System.out.println("New record inserted successfully.");
            }
            }

              }
       
        
catch (Exception e) {
            e.printStackTrace();
        } 

      }
      else{  

    searcid = Integer.parseInt(selectedValuess.replaceAll("[^0-9]", ""));
     searchname=selectedValuess.replaceAll("[0-9]","");
      searchname=searchname.replaceAll("^\\s+", "");

 // Database conectivity

        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
   
          String checkQuery = "SELECT 1 FROM biometric.consideration WHERE Emp_id = ? AND Date = ?";
            PreparedStatement checkStatement = con.prepareStatement(checkQuery);
            checkStatement.setInt(1, searcid);
            checkStatement.setString(2, TheDate);
            ResultSet resultSet = checkStatement.executeQuery();
            if (resultSet.next()) {
                // Record exists, update it
                String updateQuery = "UPDATE biometric.consideration SET Reasone = ?,Time_in=?,Time_out=?,ignoreing=? WHERE Emp_id = ? AND Date = ?";
                PreparedStatement updateStatement = con.prepareStatement(updateQuery);
                updateStatement.setString(1, userInput);
                 if (timein == null)
                {
                     updateStatement.setNull(2, java.sql.Types.VARCHAR);
                }
                else{
                    updateStatement.setString(2, timein); 
                }
                if (timeout== null)
                {
                     updateStatement.setNull(3, java.sql.Types.VARCHAR);
                }
                else{
                    updateStatement.setString(3, timeout);
                }
                
               if (ignoreit == null) {
                    updateStatement.setNull(4, java.sql.Types.VARCHAR); // Store as null
               } 
               else {
                   updateStatement.setString(4, ignoreit); // Store as string
               }
                updateStatement.setInt(5, searcid);
                updateStatement.setString(6, TheDate);
                updateStatement.executeUpdate();
                System.out.println("Record updated successfully.");
            } else {
                // Record doesn't exist, insert a new one
                String insertQuery = "INSERT INTO biometric.consideration (Emp_id,Emp_Name,Date,Time_in,Time_out,ignoreing,Reasone) VALUES (?,?,?,?,?,?,?)";
                PreparedStatement insertStatement = con.prepareStatement(insertQuery);
                insertStatement.setInt(1, searcid);
                 insertStatement.setString(2, searchname);
                insertStatement.setString(3, TheDate);
                if (timein == null)
                {
                     insertStatement.setNull(4, java.sql.Types.VARCHAR);
                }
                else{
                    insertStatement.setString(4, timein); 
                }
                if (timeout== null)
                {
                     insertStatement.setNull(5, java.sql.Types.VARCHAR);
                }
                else{
                    insertStatement.setString(5, timeout);
                }
                
                
               if (ignoreit == null) {
                    insertStatement.setNull(6, java.sql.Types.VARCHAR); // Store as null
               } 
               else {
                   insertStatement.setString(6, ignoreit); // Store as string
               }
                insertStatement.setString(7, userInput);
                insertStatement.executeUpdate();
                System.out.println("New record inserted successfully.");
            }
          
      }

       
        
catch (Exception e) {
            e.printStackTrace();
        } 
        } 
 
            decideHoliday();
   
    considerationlist();
    
    
    
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
         String selectedValues = jComboBox3.getSelectedItem().toString();
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             String deleteSql = "DELETE FROM biometric.holiday where catogory=?;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
         deleteing.setString(1, selectedValues);
           deleteing.executeUpdate();
}
catch (Exception e) {
            e.printStackTrace();
        }  
          cleanholidaylist();
        holidayCatogoryList();

         decideHoliday();
       
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
           try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             String userInput = jTextField1.getText(); // Get user input
                System.out.println("User input: " + userInput);
                   String insertQuery = "INSERT INTO biometric.holiday (catogory) VALUES (?)";
                PreparedStatement insertStatement = con.prepareStatement(insertQuery);
                                insertStatement.setString(1, userInput);
                                
                insertStatement.executeUpdate();
}
catch (Exception e) {
            e.printStackTrace();
        }  
            jTextField1.setText("");
          
        holidayCatogoryList();
     cleanholidaylist();
         decideHoliday();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String employee=f.getAbsolutePath();
       // jTextField1.setText(filename);
        System.out.println(employee);
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
         String insertSql = "INSERT INTO biometric.emp(Emp_no,Emp_Name)value(?,?)";
         String deleteSql = "DELETE FROM biometric.emp;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
           deleteing.executeUpdate();
         try (BufferedReader  reader = new BufferedReader (new FileReader(employee))) {
                String line;
                PreparedStatement preparedStatement = con.prepareStatement(insertSql);

               while ((line = reader.readLine()) != null) {
                    String[] data = line.split("\t");
                     StringTokenizer st = new StringTokenizer(line, ",");
                      int emp_id = Integer.parseInt(st.nextToken());
                       String emp_name = st.nextToken();
                    preparedStatement.setInt(1,emp_id);
                    preparedStatement.setString(2,emp_name);
                    preparedStatement.executeUpdate();
                }  
          
                }
        }
catch (Exception e) {
            e.printStackTrace();
            System.out.println("The data is already inserted");
        }  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
           
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
             
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
           try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
 String deleteSql = "DELETE FROM biometric.attendence;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
           deleteing.executeUpdate();
           
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            System.out.println("Selected file: " + filename);

            // Insert data from the file into the database
            String insertSql = "INSERT INTO biometric.attendence(Emp_id,Date_and_Time)value(?,?)";
            try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
                String line;
                PreparedStatement preparedStatement = con.prepareStatement(insertSql);

                while ((line = reader.readLine()) != null) {
                    String[] data = line.split("\t");
                    preparedStatement.setString(1, data[0]);
                    preparedStatement.setString(2, data[1]);
                    preparedStatement.executeUpdate();
                }
               
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }          
                   
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        try{
            File file=new File("output.pdf");
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                   Desktop.getDesktop().open(file);
                }else{
                    JOptionPane.showMessageDialog(this,"not supported");
                }
            }else{
                JOptionPane.showMessageDialog(this,"File not exist");
            }
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
 
                    
     
       
        
             
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
         jTable2.setModel(new DefaultTableModel(null,new String[]{ "EmpId", "Emp Name", "Date","Status","Reasone", "Time in",
        "Time out", "Total Time", "Remark in", "Remark out", "Half Day","Overtime"}));
             try{
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails 
            }
        String searching;
    
        String selectedValues = jComboBox2.getSelectedItem().toString();
      int searcid;
            searcid = Integer.parseInt(selectedValues.replaceAll("[^0-9]", ""));
        System.out.println(searcid);
        
            searching = "SELECT * FROM biometric.completion where Emp_id=? order by Date";
                    try{
                       
                         PreparedStatement preparedStatement = con.prepareStatement(searching);
                         preparedStatement.setInt(1, searcid);
ResultSet rs=preparedStatement.executeQuery();
String all = null;
  String sys_config="";
         while(rs.next()){
             
             for (int i=1;i<=10;i++){
                 sys_config += rs.getString(i)+" ";
                  all=sys_config;
                  
             }
            // 
         System.out.println(all);
         //testing
       while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("Date"));
   String status=String.valueOf(rs.getString("Status"));
   String reasone=String.valueOf(rs.getString("Reasone"));
   String time_in=String.valueOf(rs.getString("Time_in"));
   String time_out=String.valueOf(rs.getString("Time_out"));
   String toal_time=String.valueOf(rs.getString("Total_time"));
   String Remark_in=String.valueOf(rs.getString("Remark_in"));
   String Remark_out=String.valueOf(rs.getString("Remark_out"));
   String half_day=String.valueOf(rs.getString("Half_day"));
   String overtime =String.valueOf(rs.getString("Overtime"));
   
   String tbData[]={id,emp_name,date_part,status,reasone,time_in,time_out,toal_time,Remark_in,Remark_out,half_day,overtime};
   DefaultTableModel tblModel=(DefaultTableModel)jTable2.getModel();
  tblModel.addRow(tbData);
         }
         

      
            searcid = Integer.parseInt(selectedValues.replaceAll("[^0-9]", ""));
        System.out.println(searcid);
        
            searching = "SELECT * FROM biometric.completion where Emp_id="+searcid+" order by Date";
            
                java.sql.Statement statement = con.createStatement();
                 ResultSet resultSet = statement.executeQuery(searching);
           java.sql.Statement s = con.createStatement();
             Document document = new Document();
          document.setPageSize(PageSize.A4.rotate());
             document.setMargins(0, 0, 0, 0);
          
          
        try {
            PdfWriter.getInstance(document,new FileOutputStream("output.pdf"));
        } catch (DocumentException ex) {
            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
        }
         document.open();
          Image img = Image.getInstance("support/KITS.png");
       img.scaleAbsolute(150,150);
       img.setAlignment(1);
         PdfPTable table = new PdfPTable(12);
           table.addCell("Emp Id");
            table.addCell("Emp Name");
             table.addCell("Date");
            table.addCell("Status");
            table.addCell("Reason");
             table.addCell("Time In");
              table.addCell("Time out");
                table.addCell("Total Time");
               table.addCell("Remark In");
                table.addCell("Remark Out");
                table.addCell("Half Day");
                   table.addCell("Overtime");
                   while(resultSet.next()){
              table.addCell(resultSet.getString("Emp_Id"));
              table.addCell(resultSet.getString("Emp_Name"));
             table.addCell(resultSet.getString("Date"));
           table.addCell(resultSet.getString("Status"));
           table.addCell(resultSet.getString("Reasone"));
           table.addCell(resultSet.getString("Time_in"));
            table.addCell(resultSet.getString("Time_out"));
             table.addCell(resultSet.getString("Total_time"));
               table.addCell(resultSet.getString("Remark_in"));
                table.addCell(resultSet.getString("Remark_out"));
                 table.addCell(resultSet.getString("Half_day"));
                 table.addCell(resultSet.getString("Overtime"));
       
          }
                                      float[] columnWidths = new float[]{10f,15f,18f,12f,14f,15f,15f,15f,12f,12f,12f,20f};
            table.setWidths(columnWidths);
              document.add(img);
          document.add(table);
           statement.close();
           resultSet.close();
           s.close();
           document.close();
  
        
         //testing end
         }
                    }
catch (Exception e) {
            e.printStackTrace();
        }  
             }      catch (Exception e) {
            e.printStackTrace();
        }
             
             
             
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        
        //Celanring table
         jTable2.setModel(new DefaultTableModel(null,new String[]{ "EmpId", "Emp Name", "Date","Status","Ignore","Reasone", "Time in",
        "Time out", "Total Time", "Remark in", "Remark out", "Half Day","Overtime"}));
         
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            } 
 
           
            try {
              
                String show = "select * from biometric.completion Order by Emp_id,Date;";
       
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("Date"));
   String status=String.valueOf(rs.getString("Status"));
   String ignore=String.valueOf(rs.getString("ignoreing"));
   String reasone=String.valueOf(rs.getString("Reasone"));
   String time_in=String.valueOf(rs.getString("Time_in"));
   String time_out=String.valueOf(rs.getString("Time_out"));
   String toal_time=String.valueOf(rs.getString("Total_time"));
   String Remark_in=String.valueOf(rs.getString("Remark_in"));
   String Remark_out=String.valueOf(rs.getString("Remark_out"));
   String half_day=String.valueOf(rs.getString("Half_day"));
   String overtime =String.valueOf(rs.getString("Overtime"));
   
  
   
   
   String tbData[]={id,emp_name,date_part,status,ignore,reasone,time_in,time_out,toal_time,Remark_in,Remark_out,half_day,overtime};
   DefaultTableModel tblModel=(DefaultTableModel)jTable2.getModel();
  tblModel.addRow(tbData);
    
}

               
                System.out.println("Data inserted successfully!");
                
                
                 java.sql.Statement statement = con.createStatement();
                 ResultSet resultSet = statement.executeQuery("select * from biometric.completion Order by Emp_id,Date;");
           java.sql.Statement s = con.createStatement();
             Document document = new Document();
          document.setPageSize(PageSize.A4.rotate());
          document.setMargins(0, 0, 0, 0);
          
          
        try {
            PdfWriter.getInstance(document,new FileOutputStream("output.pdf"));
        } catch (DocumentException ex) {
            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
        }
         document.open();
          Image img = Image.getInstance("support/KITS.png");
       img.scaleAbsolute(150,150);
       img.setAlignment(1);
           PdfPTable table = new PdfPTable(12);
           table.addCell("Emp Id");
            table.addCell("Emp Name");
             table.addCell("Date");
            table.addCell("Status");
            table.addCell("Reason");
             table.addCell("Time In");
              table.addCell("Time out");
                table.addCell("Total Time");
               table.addCell("Remark In");
                table.addCell("Remark Out");
                table.addCell("Half Day");
                   table.addCell("Overtime");
                   while(resultSet.next()){
              table.addCell(resultSet.getString("Emp_Id"));
              table.addCell(resultSet.getString("Emp_Name"));
             table.addCell(resultSet.getString("Date"));
           table.addCell(resultSet.getString("Status"));
           table.addCell(resultSet.getString("Reasone"));
           table.addCell(resultSet.getString("Time_in"));
            table.addCell(resultSet.getString("Time_out"));
             table.addCell(resultSet.getString("Total_time"));
               table.addCell(resultSet.getString("Remark_in"));
                table.addCell(resultSet.getString("Remark_out"));
                 table.addCell(resultSet.getString("Half_day"));
                 table.addCell(resultSet.getString("Overtime"));
       
          }
                    float[] columnWidths = new float[]{10f,15f,18f,12f,14f,15f,15f,15f,12f,12f,12f,20f};
            table.setWidths(columnWidths);
              document.add(img);
          document.add(table);
           statement.close();
           resultSet.close();
           s.close();
           document.close();
            } catch (Exception e) {  
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        // TODO add your handling code here:
       

       
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
           String selectedValuess;
    selectedValuess = jComboBox5.getSelectedItem().toString();
        System.out.println(selectedValuess);
      //    jComboBox5.removeAllItems();
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox5FocusGained
        // TODO add your handling code here:
      
      
    }//GEN-LAST:event_jComboBox5FocusGained

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
       String selectedValues;
    selectedValues = jComboBox1.getSelectedItem().toString();
        System.out.println(selectedValues);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
          // TODO add your handling code here:
         
         String selectedValues;
    selectedValues = jComboBox1.getSelectedItem().toString();
    if(selectedValues=="Select leave"){
      
    }
    else
    {
        
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                
         String deletealldata = "DELETE FROM biometric.partial_absent;";
         PreparedStatement deleteingalldata = con.prepareStatement(deletealldata);
           deleteingalldata.executeUpdate();
           
       String finaledeletealldata = "DELETE FROM biometric.finale_absent;";
         PreparedStatement finaledeleteingalldata = con.prepareStatement(finaledeletealldata);
           finaledeleteingalldata.executeUpdate();
           
           String deletealldatacompletion = "DELETE FROM biometric.partiale_completion;";
         PreparedStatement deleteingalldatacompletion = con.prepareStatement(deletealldatacompletion);
           deleteingalldatacompletion.executeUpdate();
           
           String delintioncompletion = "DELETE FROM biometric.completion;";
         PreparedStatement finaledeletion = con.prepareStatement(delintioncompletion);
           finaledeletion.executeUpdate();
           
             String insertingnotleave = "Insert into biometric.partial_absent(Emp_id,Emp_Name,Date,Status)\n" +
"select Emp_id,Emp_Name,Date,Status from biometric.finale_attendence where Status='Absent';";
         PreparedStatement insertingleaveset = con.prepareStatement(insertingnotleave);
           insertingleaveset.executeUpdate();
           System.out.println("finale absent");
         
         String leave_attendance = "INSERT INTO biometric.finale_absent (Emp_id, Emp_Name, Date,Status)\n" +
"WITH RankedAttendance AS (\n" +
"    SELECT\n" +
"        Emp_id,\n" +
"        Emp_Name,\n" +
"        Date,\n" +
"        Status,\n" +
"        ROW_NUMBER() OVER (PARTITION BY Emp_id ORDER BY Date) AS RowNum\n" +
"    FROM biometric.partial_absent\n" +
")\n" +
"SELECT\n" +
"    Emp_id,\n" +
"    Emp_Name,\n" +
"    Date,\n" +
"    CASE\n" +
"        WHEN RowNum <= ? AND Status = 'Absent' THEN 'Paid leave'\n" +
"        ELSE 'Absent'\n" +
"    END AS Status\n" +
"FROM RankedAttendance;";

            PreparedStatement updatin = con.prepareStatement(leave_attendance);
              updatin.setString(1, selectedValues);
            updatin.executeUpdate();
            System.out.println("All Good");
                        
                String finalecompletion = "Insert into biometric.partiale_completion(Emp_id,Emp_Name,Date,Status,ignoreing,Reasone)\n" +
"SELECT Emp_id,Emp_Name,Date,Status,ignoreing,Reasone FROM biometric.finale_present\n" +
"UNION \n" +
"select Emp_id,Emp_Name,Date,Status,null,null from biometric.finale_absent;";
            PreparedStatement complete_finale = con.prepareStatement(finalecompletion);
            complete_finale.executeUpdate();
            
            
              String completing = "insert into biometric.completion(Emp_id,Emp_Name,Date,Status,ignoreing,Reasone)\n" +
" select * from biometric.partiale_completion;";
            PreparedStatement finale = con.prepareStatement(completing);
            finale.executeUpdate();
            
                 String completingupdation = "UPDATE biometric.completion AS t\n" +
"JOIN (\n" +
"    SELECT\n" +
"        b.Emp_id,\n" +
"        b.Emp_Name,\n" +
"        b.Date,\n" +
"        b.ignoreing, \n" +
"        b.Status,\n" +
"        a.Reasone,\n" +
"        a.time_in,\n" +
"        a.time_out,\n" +
"        a.total_time,\n" +
"        a.Remark_in,\n" +
"        a.Remark_out,\n" +
"        a.half_day,\n" +
"        a.Overtime\n" +
"        -- Add more columns as needed\n" +
"    FROM biometric.all AS a\n" +
"    LEFT JOIN biometric.partiale_completion AS b\n" +
"    ON a.Emp_id = b.Emp_id\n" +
"    AND a.date_part = b.Date\n" +
") AS subquery\n" +
"ON t.Emp_id = subquery.Emp_id\n" +
"AND t.Date = subquery.Date\n" +
"SET t.Emp_id = subquery.Emp_id,\n" +
"    t.Emp_Name = subquery.Emp_Name,\n" +
"    t.Date = subquery.Date,\n" +
"    t.Status = subquery.Status,\n" +
"    t.ignoreing = subquery.ignoreing,\n" +
"    t.Reasone = subquery.Reasone,\n" +
"    t.Time_in = subquery.time_in,\n" +
"    t.Time_out = subquery.time_out,\n" +
"    t.Total_time = subquery.total_time,\n" +
"    t.Remark_in = subquery.Remark_in,\n" +
"    t.Remark_out = subquery.Remark_out,\n" +
"    t.Half_day = subquery.half_day,\n" +
"    t.Overtime = subquery.Overtime;";
            PreparedStatement finaleupdation = con.prepareStatement(completingupdation);
            finaleupdation.executeUpdate();
            
            String holiday_updation="UPDATE biometric.completion\n" +
"SET Remark_in = CASE\n" +
"    WHEN Status = 'Holiday' THEN NULL\n" +
"    ELSE Remark_in\n" +
"END,\n" +
" Remark_out = CASE\n" +
"    WHEN Status = 'Holiday' THEN NULL\n" +
"    ELSE Remark_out\n" +
"END;";
            PreparedStatement finaleupdationholiday=con.prepareStatement(holiday_updation);
            finaleupdationholiday.executeUpdate();
            
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
         showpaticulare();
    }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jComboBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox9ActionPerformed
        // TODO add your handling code here:
         String startTimehh;
    startTimehh = jComboBox9.getSelectedItem().toString();
        System.out.println(startTimehh);
        jLabel39.setText(String.valueOf(startTimehh));
    }//GEN-LAST:event_jComboBox9ActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        // TODO add your handling code here:
         String startTimemm;
    startTimemm = jComboBox10.getSelectedItem().toString();
        System.out.println(startTimemm);
       jLabel40.setText(String.valueOf(startTimemm));
    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void jComboBox9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox9FocusGained
   
    }//GEN-LAST:event_jComboBox9FocusGained

    private void jComboBox10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox10FocusGained
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jComboBox10FocusGained

    private void jComboBox12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox12FocusGained
        // TODO add your handling code here:
           
    }//GEN-LAST:event_jComboBox12FocusGained

    private void jComboBox15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox15FocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox15FocusGained

    private void jComboBox18FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox18FocusGained
        // TODO add your handling code here:
    
    }//GEN-LAST:event_jComboBox18FocusGained

    private void jComboBox13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox13FocusGained
        // TODO add your handling code here:
     String convert;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            convert = String.format("%02d", i);
     
       }
       else{
           convert=new Integer(i).toString();;
       }
      
        jComboBox13.addItem(convert+"");
      }
    }//GEN-LAST:event_jComboBox13FocusGained

    private void jComboBox16FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox16FocusGained
        // TODO add your handling code here:
           
    }//GEN-LAST:event_jComboBox16FocusGained

    private void jComboBox20FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox20FocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox20FocusGained

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         String startTimehh;
    startTimehh = jComboBox9.getSelectedItem().toString();
        System.out.println(startTimehh);
          String startTimemm;
    startTimemm = jComboBox10.getSelectedItem().toString();
        System.out.println(startTimemm);
         String startTimess;
    startTimess = "00";
       
            String endTimehh;
    endTimehh = jComboBox12.getSelectedItem().toString();
        System.out.println(startTimehh);
          String endTimemm;
   endTimemm = jComboBox13.getSelectedItem().toString();
        System.out.println(startTimemm);
         String endTimess;
  endTimess = "00";
        
       
       try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               
            String startTime=String.format("%s:%s:%s",startTimehh,startTimemm,startTimess);
                String endTime = String.format("%s:%s:%s", endTimehh, endTimemm, endTimess);
           // Morning Adjustment
           
                   String updatepartial_all="update biometric.all\n" +
"JOIN biometric.partiale_all\n" +
"    ON biometric.all.Emp_id = biometric.partiale_all.Emp_id\n" +
"    AND biometric.all.date_part = biometric.partiale_all.Date\n" +
"    SET biometric.all.time_in = COALESCE(biometric.partiale_all.time_in, biometric.all.time_in),\n" +
"    biometric.all.time_out = COALESCE(biometric.partiale_all.time_out, biometric.all.time_out),\n" +
"    biometric.all.ignoreing = biometric.partiale_all.ignoreing,\n" +
"    biometric.all.Reasone = biometric.partiale_all.Reasone;";
           PreparedStatement updateStatementpartialall = con.prepareStatement(updatepartial_all);
                updateStatementpartialall.executeUpdate();
                
                
                System.out.println("Correct the syntax");
                String insertpartial_all="INSERT INTO biometric.all (Emp_id, Emp_Name, date_part, time_in, time_out, ignoreing, Reasone)\n" +
"SELECT\n" +
"    biometric.partiale_all.Emp_id,\n" +
"    biometric.partiale_all.Emp_Name,\n" +
"    biometric.partiale_all.Date,\n" +
"    biometric.partiale_all.time_in,\n" +
"    biometric.partiale_all.time_out,\n" +
"    biometric.partiale_all.ignoreing,\n" +
"    biometric.partiale_all.Reasone\n" +
"FROM biometric.partiale_all\n" +
"WHERE NOT EXISTS (\n" +
"    SELECT 1\n" +
"    FROM biometric.all\n" +
");";
                 PreparedStatement insertStatementpartialall = con.prepareStatement(insertpartial_all);
                insertStatementpartialall.executeUpdate();
             
                
                
                
        String adjustime = "UPDATE biometric.all\n" +
"SET time_out = ?\n" +
"WHERE time_out < ? AND time_in = time_out;";

            PreparedStatement adjusting = con.prepareStatement(adjustime);
              adjusting.setString(1, endTime);
              adjusting.setString(2, endTime);
            adjusting.executeUpdate();      
            System.out.println("start date and end date");
            //Double finger print
                 String click = "UPDATE biometric.all\n" +
"SET time_out = CASE\n" +
"    WHEN TIMEDIFF(\n" +
"        (SELECT MAX(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.time_out, ' ', -1), '%H:%i:%s'))),\n" +
"        (SELECT MIN(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.time_in, ' ', -1), '%H:%i:%s')))\n" +
"    ) > '00:00:00' AND TIMEDIFF(\n" +
"        (SELECT MAX(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.time_out, ' ', -1), '%H:%i:%s'))),\n" +
"        (SELECT MIN(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.time_in, ' ', -1), '%H:%i:%s')))\n" +
"    ) <= '00:00:05'\n" +
"    THEN ?  ELSE time_out\n" +
"END;";

            PreparedStatement clicking = con.prepareStatement(click);
              clicking.setString(1, endTime);
            clicking.executeUpdate();
            
            // Updating total time
             String total = "UPDATE biometric.all\n" +
"SET total_time = TIMEDIFF(\n" +
"    (SELECT MAX(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.Time_out, ' ', -1), '%H:%i:%s'))),\n" +
"    (SELECT MIN(STR_TO_DATE(SUBSTRING_INDEX(biometric.all.Time_in, ' ', -1), '%H:%i:%s')))\n" +
");";

            PreparedStatement total_time = con.prepareStatement(total);
            total_time.executeUpdate();
            
         
            //Updating Remark IN AND Remark OUT
             
             String updateQueryin = "UPDATE biometric.all " +
                                "SET Remark_in = CASE " +
                                "WHEN CAST(time_in AS TIME)<=? THEN NULL " +
                                "ELSE 'Late' " +
                                "END";

            PreparedStatement updatin = con.prepareStatement(updateQueryin);
              updatin.setString(1, startTime);
            updatin.executeUpdate();
       
           
            String updateQueryout = "UPDATE biometric.all\n" +
"SET Remark_out = CASE\n" +
"    WHEN CAST(time_out AS TIME) >= ? THEN NULL\n" +
"    ELSE 'Early'\n" +
"END;";
             PreparedStatement updatout = con.prepareStatement(updateQueryout);
             updatout.setString(1, endTime);
            updatout.executeUpdate();
            
               String ingnoreupdat = "UPDATE biometric.all\n" +
"SET Remark_in = CASE\n" +
"    WHEN ignoreing = 'Late, Early' THEN NULL\n" +
"    ELSE Remark_in\n" +
"END,\n" +
" Remark_out = CASE\n" +
"    WHEN ignoreing = 'Late, Early' THEN NULL\n" +
"    ELSE Remark_out\n" +
"END,\n" +
" Remark_in = CASE\n" +
"    WHEN ignoreing = 'Late' THEN NULL\n" +
"    ELSE Remark_in\n" +
"END,\n" +
" Remark_out = CASE\n" +
"    WHEN ignoreing = 'Early' THEN NULL\n" +
"    ELSE Remark_out\n" +
"END\n" +
  
";";
             PreparedStatement ignoringupdate = con.prepareStatement(ingnoreupdat);
            
            ignoringupdate.executeUpdate();  
            
            
            
            

        }
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox18ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         String morningTimehh;
    morningTimehh = jComboBox15.getSelectedItem().toString();
      
          String morningTimemm;
    morningTimemm = jComboBox16.getSelectedItem().toString();
       
         String morningTimess;
    morningTimess ="00";
       
        String eveningTime;
            String eveningTimehh;
    eveningTimehh = jComboBox18.getSelectedItem().toString();
        
          String eveningTimemm;
   eveningTimemm = jComboBox20.getSelectedItem().toString();
       
         String eveningTimess;
  eveningTimess = "00";
       
        
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             String morningTime=String.format("%s:%s:%s",morningTimehh,morningTimemm,morningTimess);
            eveningTime=String.format("%s:%s:%s",eveningTimehh,eveningTimemm,eveningTimess);
                System.out.println(morningTime);
           //   String  testtime="10:05:00";
                   String half_day = "UPDATE biometric.all " +
                  "SET half_day = CASE " +
                  "  WHEN CAST(time_in AS TIME) BETWEEN ? AND ? THEN 'Half Day' " +
                  "  WHEN CAST(time_out AS TIME) BETWEEN ? AND ? THEN 'Half Day' " +
                  "  ELSE NULL " +
                  "END;";

            PreparedStatement updatin = con.prepareStatement(half_day);
              updatin.setString(1,morningTime);
              updatin.setString(2,eveningTime);
              updatin.setString(3,morningTime);
              updatin.setString(4,eveningTime);
              
            updatin.executeUpdate();
            System.out.println("Data updated");
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         try{
            File file=new File("output.pdf");
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                   Desktop.getDesktop().open(file);
                }else{
                    JOptionPane.showMessageDialog(this,"not supported");
                }
            }else{
                JOptionPane.showMessageDialog(this,"File not exist");
            }
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
             jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
             jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
             jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        // TODO add your handling code here:    
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
            jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
        // TODO add your handling code here:
         String endTimehh = jComboBox12.getSelectedItem().toString();
        System.out.println(endTimehh);
         
        jLabel44.setText(String.valueOf(endTimehh));
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void jComboBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox13ActionPerformed
        // TODO add your handling code here:
      
          String endTimemm;
   endTimemm = jComboBox13.getSelectedItem().toString();
        System.out.println(endTimemm);
  

        jLabel45.setText(String.valueOf(endTimemm));
    }//GEN-LAST:event_jComboBox13ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
         jTable3.setModel(new DefaultTableModel(null,new String[]{ "Catogory"}));
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            
             String show = "select * from biometric.holiday";
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
   
   String catogory=String.valueOf(rs.getString("catogory"));
  
  
   
   
   String tbData[]={catogory};
   DefaultTableModel tblModel=(DefaultTableModel)jTable3.getModel();
  tblModel.addRow(tbData);
    
}
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        // TODO add your handling code here:
         jTable3.setModel(new DefaultTableModel(null,new String[]{ "Date","Catogory"}));
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             
             String show = "select * from biometric.holidays";
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String dates=String.valueOf(rs.getString("dates"));
   String categories=String.valueOf(rs.getString("Categories"));
  
  
   
   
   String tbData[]={dates,categories};
   DefaultTableModel tblModel=(DefaultTableModel)jTable3.getModel();
  tblModel.addRow(tbData);
    
}
 } catch (SQLException ex) {
        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             SimpleDateFormat dataformat = new SimpleDateFormat("yyyy-MM-dd");
       
       String TheDate=dataformat.format(jDateChooser4.getDate());
            
        String selectedValues = jComboBox7.getSelectedItem().toString();
             
                   String insertQuery = "INSERT INTO biometric.holidays (dates,Categories) VALUES (?,?)";
                PreparedStatement insertStatement = con.prepareStatement(insertQuery);
                                insertStatement.setString(1, TheDate);
                                insertStatement.setString(2, selectedValues);
                insertStatement.executeUpdate();
                System.out.println("New record inserted successfully.");
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jComboBox3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusGained
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jComboBox3FocusGained

    private void jComboBox7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox7FocusGained
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboBox7FocusGained

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
           SimpleDateFormat dataformat = new SimpleDateFormat("yyyy-MM-dd");
       
       String TheDate=dataformat.format(jDateChooser4.getDate());
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             String deleteSql = "DELETE FROM biometric.holidays where dates=?;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
         deleteing.setString(1, TheDate);
           deleteing.executeUpdate();
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    /*  try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               String show = "SELECT * FROM biometric.holiday";
            try {
               
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
 while (rs.next()) {
     
        String catogory = rs.getString("catogory");
        
        jComboBox3.addItem(catogory); // Add each name to the combo box
    }
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
          
            // Insert data from the file into the database
             }
        catch(Exception e){
            
        }} catch (Exception e) {
            e.printStackTrace();
        }  */
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
             
           
                 String updateholiday = " UPDATE biometric.finale_attendence AS fa\n" +
"LEFT JOIN biometric.holidays AS h ON fa.Date = h.dates\n" +
"SET fa.Status = 'Holiday', fa.Reasone = h.Categories\n" +
"WHERE h.dates IS NOT NULL;";
         PreparedStatement updateholidayset = con.prepareStatement(updateholiday);
           updateholidayset.executeUpdate();
           
   /* String insertingnotleave = "insert into biometric.finale_present(Emp_id,Emp_Name,Date,Status)\n" +
"select * from biometric.finale_attendence where Status!='Absent';";
         PreparedStatement insertingleaveset = con.prepareStatement(insertingnotleave);
           insertingleaveset.executeUpdate();
           
           
           */
           
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                String deleteSql = "DELETE FROM biometric.holidays;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
           deleteing.executeUpdate();
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                
                //Deletion of all data
                String delete_alldates = "DELETE FROM biometric.all_dates;";
         PreparedStatement all_dates = con.prepareStatement(delete_alldates);
           all_dates.executeUpdate();
           
            String deleteall = "DELETE FROM biometric.all;";
         PreparedStatement deleteingall = con.prepareStatement(deleteall);
           deleteingall.executeUpdate();
           
               String deletealldata = "DELETE FROM biometric.attend_status;";
         PreparedStatement deleteingalldata = con.prepareStatement(deletealldata);
           deleteingalldata.executeUpdate();
           
              
            String deleteabsenty = "DELETE FROM biometric.absenty;";
         PreparedStatement deletingabsenty = con.prepareStatement(deleteabsenty);
           deletingabsenty.executeUpdate();
           
            String deletepresent = "DELETE FROM biometric.present;";
         PreparedStatement deletingpresent = con.prepareStatement(deletepresent);
           deletingpresent.executeUpdate();
            
           
             String all_attendence = "delete FROM biometric.finale_attendence;";
         PreparedStatement all_attendence_status = con.prepareStatement(all_attendence);
           all_attendence_status.executeUpdate();
           
           SimpleDateFormat dataformat = new SimpleDateFormat("yyyy-MM-dd");
       
       String startDate=dataformat.format(jDateChooser2.getDate());
       System.out.println(startDate);
         String endDate=dataformat.format(jDateChooser3.getDate());
       System.out.println(endDate);
           String other ="INSERT INTO biometric.all(Emp_id, Emp_Name, date_part, time_in, time_out, total_time) SELECT biometric.attendence.Emp_id, biometric.emp.Emp_Name, SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', 1) AS date_part, \n" +
"MIN(STR_TO_DATE(SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', -1), '%H:%i:%s')) AS time_in, \n" +
"MAX(STR_TO_DATE(SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', -1), '%H:%i:%s')) AS time_out, \n" +
"TIMEDIFF( MAX(STR_TO_DATE(SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', -1), '%H:%i:%s')), \n" +
"MIN(STR_TO_DATE(SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', -1), '%H:%i:%s')) ) AS total_time FROM biometric.attendence \n" +
"INNER JOIN biometric.emp ON biometric.attendence.Emp_id = biometric.emp.Emp_no\n" +
" WHERE SUBSTRING_INDEX(biometric.attendence.Date_and_Time, ' ', 1) BETWEEN ? AND ? \n" +
"GROUP BY biometric.attendence.Emp_id, biometric.emp.Emp_Name, date_part\n" +
"Order By Emp_id;";
         PreparedStatement insertother = con.prepareStatement(other);
            insertother.setString(1, startDate);
            insertother.setString(2, endDate);
            insertother.execute();
            System.out.println("the data problem");
            
             
      String attend_status_distinct ="INSERT INTO biometric.all_dates (date)\n" +
"WITH RECURSIVE date_range AS (\n" +
"  SELECT CAST(? AS DATE) AS date\n" +
"  UNION ALL\n" +
"  SELECT DATE_ADD(date, INTERVAL 1 DAY)\n" +
"  FROM date_range\n" +
"  WHERE date < ?\n" +
")\n" +
"SELECT date FROM date_range;";
         PreparedStatement insert_attend_all = con.prepareStatement(attend_status_distinct);
            insert_attend_all.setString(1, startDate);
            insert_attend_all.setString(2, endDate);
            insert_attend_all.execute();
         
                      String alldatesinsertdate = "INSERT INTO biometric.attend_status(Emp_id,Emp_Name,date_part)\n" +
"WITH AllDaysInBetween AS (\n" +
"    SELECT DISTINCT date\n" +
"    FROM biometric.all_dates\n" +
"),\n" +
"ExistingVisits AS (\n" +
"    SELECT DISTINCT  Emp_id,Emp_Name,date_part AS visitDate\n" +
"    FROM biometric.all\n" +
")\n" +
"SELECT biometric.Sites.Emp_id,biometric.all.Emp_Name, AllDaysInBetween.date AS Date\n" +
"FROM biometric.all_dates as AllDaysInBetween\n" +
"CROSS JOIN (SELECT DISTINCT Emp_id FROM biometric.all) AS Sites\n" +
"LEFT JOIN biometric.all on biometric.all.Emp_id= Sites.Emp_id\n" +
"WHERE NOT EXISTS (\n" +
"    SELECT 1\n" +
"    FROM ExistingVisits\n" +
"    WHERE visitDate = AllDaysInBetween.date\n" +
"  AND Emp_id = Sites.Emp_id  And Emp_id is NULL\n" +
")\n" +
"Group by Emp_id,Date,Emp_Name\n" +
"ORDER BY Emp_id, Date ;";
                PreparedStatement insertdateStatement = con.prepareStatement(alldatesinsertdate);
                                
                insertdateStatement.executeUpdate();
                
                  String absentyinsert = "insert into biometric.absenty(Emp_id,Emp_name,Date)\n" +
"select Emp_id,Emp_Name,date_part from biometric.attend_status\n" +
"Except\n" +
"select Emp_id,Emp_Name,date_part from biometric.all;";
                PreparedStatement insertabsenty = con.prepareStatement(absentyinsert);
                 insertabsenty.executeUpdate();
                 
                  String presentyinsert = "insert into biometric.present(Emp_id,Emp_Name,Date)\n" +
"select Emp_id,Emp_Name,date_part from biometric.attend_status\n" +
"intersect\n" +
"select Emp_id,Emp_Name,date_part from biometric.all;";
                PreparedStatement insertpresenty = con.prepareStatement(presentyinsert);
                 insertpresenty.executeUpdate();
                 
                   String presentyinsertset = "UPDATE biometric.present\n" +
"SET status = \"Present\";";
                PreparedStatement insertpresentyset = con.prepareStatement(presentyinsertset);
                 insertpresentyset.executeUpdate();
                 
                    String absentyinsertset = "UPDATE biometric.absenty\n" +
"SET status = \"Absent\"; ";
                PreparedStatement insertabsentyset = con.prepareStatement(absentyinsertset);
                 insertabsentyset.executeUpdate();
                 
                     String finale_attendence = "insert into biometric.finale_attendence(Emp_id,Emp_Name,Date,Status)\n" +
"select * from biometric.absenty\n" +
"union\n" +
"select * from biometric.present;\n";
                PreparedStatement finale_attendence_status = con.prepareStatement(finale_attendence);
                 finale_attendence_status.executeUpdate();
           // insert data for futhuer date
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel(null,new String[]{ "Emp Id", "Emp Name", "Total Days", "Total Time",
        "Late", "Early Out", "Half Day"}));
                try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            } 
 
           
            try {
            
                String show = " SELECT\n" +
"    biometric.completion.Emp_id,\n" +
"    biometric.completion.Emp_Name,\n" +
"SUM(CASE WHEN Status = 'Present' THEN 1 ELSE 0 END) AS Total_days,\n" +
"    SEC_TO_TIME(SUM(TIME_TO_SEC(time_out) - TIME_TO_SEC(time_in))) AS total_time,\n" +
"    COUNT(Remark_in) AS Late,\n" +
"    COUNT(Remark_out) AS Early_out,\n" +
"    COUNT(half_day) AS Half_Day\n" +
"FROM\n" +
"    biometric.completion\n" +
"GROUP BY\n" +
"    biometric.completion.Emp_id, Emp_Name;" ;
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("total_days"));
   String time_in=String.valueOf(rs.getString("total_time"));
   String time_out=String.valueOf(rs.getString("Late"));
   String total_time=String.valueOf(rs.getString("Early_out"));
   String Remark_in=String.valueOf(rs.getString("Half_Day"));
  
   
   
   String tbData[]={id,emp_name,date_part,time_in,time_out,total_time,Remark_in};
   DefaultTableModel tblModel=(DefaultTableModel)jTable1.getModel();
  tblModel.addRow(tbData);
    
}
      System.out.println("Database Connected");
                java.sql.Statement statement = con.createStatement();
                 ResultSet resultSet = statement.executeQuery("SELECT\n" +
"    biometric.completion.Emp_id,\n" +
"    biometric.completion.Emp_Name,\n" +
"SUM(CASE WHEN Status = 'Present' THEN 1 ELSE 0 END) AS Total_days,\n" +
"    SEC_TO_TIME(SUM(TIME_TO_SEC(time_out) - TIME_TO_SEC(time_in))) AS total_time,\n" +
"    COUNT(Remark_in) AS Late,\n" +
"    COUNT(Remark_out) AS Early_out,\n" +
"    COUNT(half_day) AS Half_Day\n" +
"FROM\n" +
"    biometric.completion\n" +
"GROUP BY\n" +
"    biometric.completion.Emp_id, Emp_Name;");
           java.sql.Statement s = con.createStatement();
             Document document = new Document();
          document.setPageSize(PageSize.A4.rotate());
          
          
        try {
            PdfWriter.getInstance(document,new FileOutputStream("output.pdf"));
        } catch (DocumentException ex) {
            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
        }
         document.open();
         Image img = Image.getInstance("support/KITS.png");
     img.scaleAbsolute(150,150);
      img.setAlignment(1);
           PdfPTable table = new PdfPTable(7);
           table.addCell("Emp Id");
            table.addCell("Emp Name");
            table.addCell("Total Days");
             table.addCell("Total Time");
              table.addCell("Late");
                table.addCell("Early Out");
               table.addCell("Half Day");
               
                
                   while(resultSet.next()){
              table.addCell(resultSet.getString("Emp_Id"));
              table.addCell(resultSet.getString("Emp_Name"));
             table.addCell(resultSet.getString("total_days"));
           table.addCell(resultSet.getString("total_time"));
            table.addCell(resultSet.getString("Late"));
             table.addCell(resultSet.getString("Early_out"));
               table.addCell(resultSet.getString("Half_Day"));
            
   
          }
                    float[] columnWidths = new float[]{10f,18f,12f,12f,12f,12f,12f};
            table.setWidths(columnWidths);
              document.add(img);
          document.add(table);
           statement.close();
           resultSet.close();
           s.close();
           document.close();          
                System.out.println("Data inserted successfully!");
            } catch (Exception e) {  
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // TODO add your handling code here:
        
        jTable1.setModel(new DefaultTableModel(null,new String[]{ "Emp Id", "Emp Name", "Absent", "Present",
        "Holiday","Paid Leave","Consideration"}));
                try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            } 
 
           
            try {
            
                String show = "SELECT\n" +
"    Emp_id,\n" +
"    Emp_Name,\n" +
"    SUM(CASE WHEN Status = 'Absent' THEN 1 ELSE 0 END) AS Absent,\n" +
"     SUM(CASE WHEN Status = 'Present' THEN 1 ELSE 0 END) AS Present,\n" +
"      SUM(CASE WHEN Status = 'Holiday' THEN 1 ELSE 0 END) AS Holiday,\n" +
"       SUM(CASE WHEN Status = 'Paid leave' THEN 1 ELSE 0 END) AS Paid_Leave,\n"+ 
        "SUM(CASE WHEN Status = 'Consideration' THEN 1 ELSE 0 END) AS Consideration\n" +
"      \n" +
"     FROM\n" +
"    biometric.completion\n" +
"GROUP BY\n" +
"    Emp_id, Emp_Name;";
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("Absent"));
   String time_in=String.valueOf(rs.getString("Present"));
   String time_out=String.valueOf(rs.getString("Holiday"));
    String leave=String.valueOf(rs.getString("Paid_Leave"));
     String consideration=String.valueOf(rs.getString("Consideration"));
  
   
      String tbData[]={id,emp_name,date_part,time_in,time_out,leave,consideration};
   DefaultTableModel tblModel=(DefaultTableModel)jTable1.getModel();
  tblModel.addRow(tbData);
    
}
      System.out.println("Database Connected");
                java.sql.Statement statement = con.createStatement();
                 ResultSet resultSet = statement.executeQuery("SELECT\n" +
"    Emp_id,\n" +
"    Emp_Name,\n" +
"    SUM(CASE WHEN Status = 'Absent' THEN 1 ELSE 0 END) AS Absent,\n" +
"     SUM(CASE WHEN Status = 'Present' THEN 1 ELSE 0 END) AS Present,\n" +
"      SUM(CASE WHEN Status = 'Holiday' THEN 1 ELSE 0 END) AS Holiday,\n" +
"       SUM(CASE WHEN Status = 'Paid leave' THEN 1 ELSE 0 END) AS Paid_Leave,\n" +
       "SUM(CASE WHEN Status = 'Consideration' THEN 1 ELSE 0 END) AS Consideration\n" +
"      \n" +
"     FROM\n" +
"    biometric.partiale_completion\n" +
"GROUP BY\n" +
"    Emp_id, Emp_Name;");
           java.sql.Statement s = con.createStatement();
             Document document = new Document();
          document.setPageSize(PageSize.A4.rotate());
           document.setMargins(0, 0, 0, 0);
          
          
        try {
            PdfWriter.getInstance(document,new FileOutputStream("output.pdf"));
        } catch (DocumentException ex) {
            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
        }
         document.open();
          Image img = Image.getInstance("support/KITS.png");
       img.scaleAbsolute(150,150);
       img.setAlignment(1);
           PdfPTable table = new PdfPTable(7);
           table.addCell("Emp Id");
            table.addCell("Emp Name");
            table.addCell("Absent");
             table.addCell("Present");
              table.addCell("Holiday");
               table.addCell("Paid Leave");
                 table.addCell("Consideration");
             
               
                
                   while(resultSet.next()){
              table.addCell(resultSet.getString("Emp_Id"));
              table.addCell(resultSet.getString("Emp_Name"));
             table.addCell(resultSet.getString("Absent"));
           table.addCell(resultSet.getString("Present"));
            table.addCell(resultSet.getString("Holiday"));
             table.addCell(resultSet.getString("Paid_Leave"));
              table.addCell(resultSet.getString("Consideration"));
             
            
   
          }
                    float[] columnWidths = new float[]{10f,18f,12f,12f,12f,12f,12f};
            table.setWidths(columnWidths);
              document.add(img);
          document.add(table);
           statement.close();
           resultSet.close();
           s.close();
           document.close();          
                System.out.println("Data inserted successfully!");
            } catch (Exception e) {  
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        // TODO add your handling code here:
         jTable5.setModel(new DefaultTableModel(null,new String[]{ "Emp ID", "Emp Name","Date","Time In","Time Out",
             "Totale Time","Remark In","Remark Out","Half Day","Reasone","Overtime"}));
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                  String show = "select * from biometric.all Order by Emp_id,date_part;";
       
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("date_part"));
   String time_in=String.valueOf(rs.getString("time_in"));
   String time_out=String.valueOf(rs.getString("time_out"));
   String total_time=String.valueOf(rs.getString("total_time"));
   String Remark_in=String.valueOf(rs.getString("Remark_in"));
   String Remark_out=String.valueOf(rs.getString("Remark_out"));
   String half_day=String.valueOf(rs.getString("half_day"));
   String Reasone=String.valueOf(rs.getString("Reasone"));
   String Overtime=String.valueOf(rs.getString("Overtime"));
   String tbData[]={id,emp_name,date_part,time_in,time_out,total_time,Remark_in
   ,Remark_out,half_day,Reasone,Overtime};
   DefaultTableModel tblModel=(DefaultTableModel)jTable5.getModel();
  tblModel.addRow(tbData);}
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
              String startTimehh;
    startTimehh = jComboBox4.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox21ActionPerformed
        // TODO add your handling code here:
              String endTimehh;
    endTimehh = jComboBox21.getSelectedItem().toString();
       
    }//GEN-LAST:event_jComboBox21ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
              String endTimemm;
    endTimemm = jComboBox6.getSelectedItem().toString();
   
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox22ActionPerformed
        // TODO add your handling code here:
         String endTimemm;
    endTimemm = jComboBox22.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBox22ActionPerformed

    private void jComboBox4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox4FocusGained
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jComboBox4FocusGained

    private void jComboBox6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox6FocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox6FocusGained

    private void jComboBox21FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox21FocusGained
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jComboBox21FocusGained

    private void jComboBox22FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox22FocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox22FocusGained

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        // TODO add your handling code here:
         jTable4.setModel(new DefaultTableModel(null,new String[]{ "EmpId", "Emp Name", "Date", "Time in",
        "Time out","Ignore","Reasone"}));
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                  String show = "select * from biometric.consideration Order by Emp_id,Date;";
       
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String date_part=String.valueOf(rs.getString("Date"));

   String time_in=String.valueOf(rs.getString("Time_in"));
   String time_out=String.valueOf(rs.getString("Time_out"));
  String ignore=String.valueOf(rs.getString("ignoreing"));
   String reasone=String.valueOf(rs.getString("Reasone"));
   String tbData[]={id,emp_name,date_part,time_in,time_out,ignore,reasone};
   DefaultTableModel tblModel=(DefaultTableModel)jTable4.getModel();
  tblModel.addRow(tbData);}
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
           // TODO add your handling code here:
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                      String deletealldata = "DELETE FROM biometric.finale_present;";
         PreparedStatement deleteingalldata = con.prepareStatement(deletealldata);
           deleteingalldata.executeUpdate();
            String deletepartialdata = "DELETE FROM biometric.partiale_all;";
         PreparedStatement partialedelete = con.prepareStatement(deletepartialdata);
           partialedelete.executeUpdate();   
           
           
                 String updateholiday = " UPDATE biometric.finale_attendence AS fa\n" +
"LEFT JOIN biometric.consideration AS c ON fa.Date = c.Date AND fa.Emp_id = c.Emp_id \n" +
"SET fa.Status = 'Consideration', fa.Reasone = c.Reasone,fa.ignoreing=c.ignoreing\n" +
"WHERE c.Date IS NOT NULL;";
                  PreparedStatement updateholidayset = con.prepareStatement(updateholiday);
                 updateholidayset.executeUpdate();
                 String insertingnotleave = "insert into biometric.finale_present(Emp_id,Emp_Name,Date,Status,ignoreing,Reasone)\n" +
"select * from biometric.finale_attendence where Status!='Absent';";
            PreparedStatement insertingleaveset = con.prepareStatement(insertingnotleave);
           insertingleaveset.executeUpdate();
           
            String insertpartialall = "insert into biometric.partiale_all(Emp_id,Emp_Name,Date,Time_in,Time_out,ignoreing,Reasone)\n" +
"select Emp_id,Emp_Name,Date,Time_in,Time_out,ignoreing,Reasone from biometric.consideration";
            PreparedStatement insertallpartial = con.prepareStatement(insertpartialall);
           insertallpartial.executeUpdate();
           
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        // TODO add your handling code here:
          SimpleDateFormat dataformat = new SimpleDateFormat("yyyy-MM-dd");
       
       String TheDate=dataformat.format(jDateChooser1.getDate());
       
        try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
             String selectedValuess = jComboBox5.getSelectedItem().toString();
             int searcid;
            searcid = Integer.parseInt(selectedValuess.replaceAll("[^0-9]", ""));
        System.out.println(searcid);
             String deleteSql = "DELETE FROM biometric.consideration where Date=? AND Emp_id=?;";
         PreparedStatement deleteing = con.prepareStatement(deleteSql);
         deleteing.setString(1, TheDate);
         deleteing.setInt(2, searcid);
           deleteing.executeUpdate();
}
catch (Exception e) {
            e.printStackTrace();
        }  
           /* jComboBox5.removeAllItems();
    jComboBox4.removeAllItems();
    jComboBox6.removeAllItems();
    jComboBox21.removeAllItems();
    jComboBox22.removeAllItems();*/
          
    considerationlist();
    }//GEN-LAST:event_jButton58ActionPerformed

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        // TODO add your handling code here:
           jTable5.setModel(new DefaultTableModel(null,new String[]{ "Emp ID", "Emp Name"}));
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                  String show = "select * from biometric.emp Order by Emp_no;";
       
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_no"));
   String emp_name=String.valueOf(rs.getString("Emp_Name"));
   String tbData[]={id,emp_name};
   DefaultTableModel tblModel=(DefaultTableModel)jTable5.getModel();
  tblModel.addRow(tbData);}
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton56ActionPerformed

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        // TODO add your handling code here:
         jTable5.setModel(new DefaultTableModel(null,new String[]{ "Emp ID", "Date and Time"}));
         try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
                  String show = "select * from biometric.attendence Order by Emp_id;";
       
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
while(rs.next()){
    String id=String.valueOf(rs.getInt("Emp_id"));
   String emp_name=String.valueOf(rs.getString("Date_and_Time"));
   String tbData[]={id,emp_name};
   DefaultTableModel tblModel=(DefaultTableModel)jTable5.getModel();
  tblModel.addRow(tbData);}
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
}
catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jComboBox5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox5FocusLost
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox5FocusLost

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
        // TODO add your handling code here:
           
        considerationlist();
       
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox20ActionPerformed
  
    /**
     * @param args the command line arguments
     */
     static void reuseconnection(){
                try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }}
catch (Exception e) {
            e.printStackTrace();
        }  
            }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new NewJFrame().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox13;
    private javax.swing.JComboBox<String> jComboBox15;
    private javax.swing.JComboBox<String> jComboBox16;
    private javax.swing.JComboBox<String> jComboBox18;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox20;
    private javax.swing.JComboBox<String> jComboBox21;
    private javax.swing.JComboBox<String> jComboBox22;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    void init() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    void inti() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    private void setIconImage() {
     ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("icon_2.png"));
 URL url = NewJFrame.class.getResource("KITS_1_1.png");
    java.awt.Image originalImage = Toolkit.getDefaultToolkit().getImage(url);



// Set the resized image as the icon
setIconImage(originalImage);
 }

    private void holidayCatogoryList() {
         jComboBox3.addItem("** Select Holiday **");
          try {
              
              cleanholidaylist();
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               String show = "SELECT * FROM biometric.holiday";
            try {
               
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
 while (rs.next()) {
     
        String catogory = rs.getString("catogory");
        
        jComboBox3.addItem(catogory); // Add each name to the combo box
    }
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
          
            // Insert data from the file into the database
             }
        catch(Exception e){
            
        }} catch (Exception e) {
            e.printStackTrace();
        }   }

    private void decideHoliday() {
    
        jComboBox7.addItem("** Select Holiday **");
           try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               String show = "SELECT * FROM biometric.holiday";
            try {
               
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
 while (rs.next()) {
     
        String catogory = rs.getString("catogory");
        
        jComboBox7.addItem(catogory); // Add each name to the combo box
    }
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
          
            // Insert data from the file into the database
             }
        catch(Exception e){
            
        }} catch (Exception e) {
            e.printStackTrace();
        }   }

    private void considerationlist() {
        
     jComboBox5.addItem("** Select Employee **");
       removeconsiderationlist();
     jComboBox5.addItem("Consider all Employee");
           try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               String show = "SELECT * FROM biometric.emp order by Emp_no;";
            try {
               
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
 while (rs.next()) {
     String empIdString=rs.getString("Emp_no");
        String name = rs.getString("Emp_Name");
        int empId = Integer.parseInt(empIdString);
        jComboBox5.addItem(empId+" "+name); // Add each name to the combo box
    }
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
          
            // Insert data from the file into the database
             }
        catch(Exception e){
            
        }} catch (Exception e) {
            e.printStackTrace();
        }     
           
           
           //Consideration time in HH 
           
        String convert;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            convert = String.format("%02d", i);
     
       }
       else{
           convert=new Integer(i).toString();;
       }
      
        jComboBox4.addItem(convert+"");
      }
        
        //Consideration time out MM
        
          String converting;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            converting = String.format("%02d", i);
     
       }
       else{
           converting=new Integer(i).toString();;
       }
      
        jComboBox6.addItem(converting+"");
      }
        
       // Consideration time out HH
           String convertout;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            convertout = String.format("%02d", i);
     
       }
       else{
           convertout=new Integer(i).toString();
       }
      
        jComboBox21.addItem(convertout+"");
      }
        // Convert time out mm
          String convertoutmm;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            convertoutmm = String.format("%02d", i);
     
       }
       else{
           convertoutmm=new Integer(i).toString();
       }
      
        jComboBox22.addItem(convertoutmm+"");
      }
        
    
    }

    private void startjcomboxall() {
        showpaticulare();
        
        //Scheduling  time daily
        
        // Full Day
        
            //Start Time
            // HH
                 // TODO add your handling code here:
      String convertstarthh;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            convertstarthh = String.format("%02d", i);
     
       }
       else{
           convertstarthh=new Integer(i).toString();;
       }
      
        jComboBox9.addItem(convertstarthh+"");
      }
            // MM
               String convertstartmm;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            convertstartmm = String.format("%02d", i);
     
       }
       else{
           convertstartmm=new Integer(i).toString();;
       }
      
        jComboBox10.addItem(convertstartmm+"");
      }
            //End Time
            // HH
              String convertendhh;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            convertendhh = String.format("%02d", i);
     
       }
       else{
           convertendhh=new Integer(i).toString();
       }
      
        jComboBox12.addItem(convertendhh+"");
      }
            // MM
               String convertendmm;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            convertendmm = String.format("%02d", i);
     
       }
       else{
           convertendmm=new Integer(i).toString();;
       }
      
        jComboBox20.addItem(convertendmm+"");
      }
            
        // Half Day
        
            //End Time
            // HH
                    String hconvertendtimehh;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            hconvertendtimehh = String.format("%02d", i);
     
       }
       else{
           hconvertendtimehh=new Integer(i).toString();;
       }
      
        jComboBox15.addItem(hconvertendtimehh+"");
      }
            // MM
            
             String hconvertendtimemm;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            hconvertendtimehh = String.format("%02d", i);
     
       }
       else{
           hconvertendtimehh=new Integer(i).toString();;
       }
      
        jComboBox16.addItem(hconvertendtimehh+"");
      }
            
            //Start Time
            //HH
            String hconvertstarttimehh;
        for(int i=0;i<=24;i++)
      {
        
       if(i<10){
            hconvertstarttimehh = String.format("%02d", i);
     
       }
       else{
           hconvertstarttimehh=new Integer(i).toString();;
       }
      
        jComboBox18.addItem(hconvertstarttimehh+"");
      }
            //MM
            
                String hconvertstarttimemm;
        for(int i=0;i<=60;i++)
      {
        
       if(i<10){
            hconvertstarttimemm = String.format("%02d", i);
     
       }
       else{
           hconvertstarttimemm=new Integer(i).toString();;
       }
      
        jComboBox20.addItem(hconvertstarttimemm+"");
      }
        
       // Number of paid leaves compobox
           for(int i=1;i<=5;i++)
      {int empId = i;
       
        jComboBox1.addItem(empId+" ");
      }
            
       
    }

    private void showpaticulare() {
        
        jComboBox2.addItem("Select Emp Id and Name");
        cleandatalist();
    try {
            String url = "jdbc:mysql://localhost:3306/biometric";
            String uname = "root";
            String password = "123456789";

            // Establish database connection
            Connection con;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, uname, password);
                System.out.println("Database Connected");
            } catch (ClassNotFoundException | SQLException e) {
                e.printStackTrace();
                return; // Exit if connection fails
            }
               String show = "SELECT * FROM biometric.emp order by Emp_no;";
            try {
                
                PreparedStatement preparedStatement = con.prepareStatement(show);
ResultSet rs=preparedStatement.executeQuery();
 while (rs.next()) {
     String empIdString=rs.getString("Emp_no");
        String name = rs.getString("Emp_Name");
        int empId = Integer.parseInt(empIdString);
        jComboBox2.addItem(empId+" "+name); // Add each name to the combo box
    }
            // Assuming you have a method called "connection()" to handle the connection setup
            // connection();

            // Choose the file to upload
          
            // Insert data from the file into the database
             }
        catch(Exception e){
            
        }} catch (Exception e) {
            e.printStackTrace();
        }  
    }

    private void removeconsiderationlist() {
     if (jComboBox5.getItemCount() > 1) {
           jComboBox5.removeItemAt(1); // Remove item at index 1
           removeconsiderationlist();
        }
    }
      private void cleanholidaylist() {
     if (jComboBox3.getItemCount() > 1) {
           jComboBox3.removeItemAt(1); // Remove item at index 1
           cleanholidaylist();
        }
      if (jComboBox7.getItemCount() > 1) {
           jComboBox7.removeItemAt(1); // Remove item at index 1
           cleanholidaylist();
        }
    }
        private void cleandatalist() {
     if (jComboBox2.getItemCount() > 1) {
           jComboBox2.removeItemAt(1); // Remove item at index 1
           cleandatalist();
        }
    }
      
    

    class NewClass {

        public NewClass() {
        }
    }

   }
